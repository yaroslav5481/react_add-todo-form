{"version":3,"sources":["api/users.ts","services/user.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","getUserById","userId","userFromServer","find","user","UserInfo","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","initialTodos","App","useState","setTodos","setUserId","setTitle","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","newTodos","type","placeholder","value","onChange","target","required","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BCzDJ,SAASC,EAAYC,GAC1B,OAAOC,EAAeC,MAAK,SAAAC,GAAI,OAAIA,EAAKR,KAAOK,MAC5C,KCJU,I,uBCOFI,EAA4B,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAClCP,EAAgBO,EAAhBP,KAAME,EAAUK,EAAVL,MAEd,OACE,mBAAGO,UAAU,WAAWC,KAAI,iBAAYR,GAAxC,SACGF,KCHMW,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCb,EAIEa,EAJFb,GACAc,EAGED,EAHFC,MACAN,EAEEK,EAFFL,KACAO,EACEF,EADFE,UAGF,OACE,0BACEL,UAAWM,IAAG,WAAY,CAAE,sBAAuBD,IACnD,UAASf,EAFX,UAIE,oBAAIU,UAAU,kBAAd,SAAiCI,IAChCN,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCflBS,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKb,UCFhCoB,EJTS,CACb,CACEpB,GAAI,EACJc,MAAO,qBACPC,WAAW,EACXV,OAAQ,GAEV,CACEL,GAAI,GACJc,MAAO,kBACPC,WAAW,EACXV,OAAQ,GAEV,CACEL,GAAI,EACJc,MAAO,qCACPC,WAAW,EACXV,OAAQ,IIRiCc,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDL,KAAMJ,EAAYS,EAAKR,aAGZgB,EAAM,WACjB,MAA0BC,mBAAiBF,GAA3C,mBAAOF,EAAP,KAAcK,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOjB,EAAP,KAAemB,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOR,EAAP,KAAcW,EAAd,KACA,EAA0CH,oBAAS,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAA4CL,oBAAS,GAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KAsCA,OACE,sBAAKnB,UAAU,MAAf,UACE,+CAEA,uBACEoB,OAAO,aACPC,OAAO,OACPC,SA3Ce,SAACC,GAMpB,GALAA,EAAMC,iBAENP,GAAkBb,GAClBe,GAAmBxB,GAEdS,GAAUT,EAAf,CAKA,IAAM8B,EAAgB,CACpBnC,GAAIoC,KAAKC,IAAL,MAAAD,KAAI,YAAQlB,EAAMC,KAAI,SAAAN,GAAI,OAAIA,EAAKb,QAAO,EAC9Cc,QACAT,QAASA,EACTU,WAAW,EACXP,KAAMJ,GAAaC,IAGrBkB,GAAS,SAAAe,GAAQ,4BAAQA,GAAR,CAAkBH,OACnCV,EAAS,IACTD,EAAU,GACVG,GAAiB,GACjBE,GAAkB,KAiBhB,UAKE,sBAAKnB,UAAU,QAAf,UACE,uBACE6B,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAO3B,EACP4B,SAzBgB,SAACT,GACzBR,EAASQ,EAAMU,OAAOF,OACtBd,GAAiB,MAyBVD,GACC,sBAAMhB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRkC,UAAQ,EACRH,MAAOpC,EACPqC,SAhCe,SAACT,GACxBT,GAAWS,EAAMU,OAAOF,OACxBZ,GAAkB,IA0BZ,UAME,wBAAQY,MAAM,IAAII,UAAQ,EAA1B,2BACCC,EAAgB3B,KAAI,SAACX,GACpB,OACE,wBAAsBiC,MAAOjC,EAAKR,GAAlC,SACGQ,EAAKP,MADKO,EAAKR,UAOvB4B,GACC,sBAAMlB,UAAU,QAAhB,qCAIJ,wBAAQ6B,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUrB,MAAOA,QCvGvB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7a3b5e75.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import userFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return userFromServer.find(user => user.id === userId)\n  || null;\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport { getUserById } from './services/user';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      userId: +userId,\n      completed: false,\n      user: getUserById(+userId),\n    };\n\n    setTodos(newTodos => [...newTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => {\n              return (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}